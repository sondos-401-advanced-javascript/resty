{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/history/history.js","components/form/form.js","components/if/if.js","components/results/results.js","app.js","index.js"],"names":["Header","to","React","Component","Footer","History","props","handlerClick","bind","e","array","target","value","split","method","url","data","this","handel","queryLocalStorage","JSON","parse","localStorage","getItem","map","item","i","body","stringify","type","onClick","key","getDataLocal","Form","handleSubmit","a","preventDefault","me","state","toggleLoading","dataBody","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","response","Headers","get","json","handler","requestQuery","objLocalStorage","counter","forEach","val","push","setItem","raw","count","results","obj","alert","handleChangeURL","setState","handleChangeMethod","id","handelBody","handelHistory","onSubmit","name","onChange","className","placeholder","render","condition","children","IfRenderer","Children","child","cloneElement","Then","Else","loading","src","Response","App","handelForm","Fragment","path","exact","Main","rootElement","document","getElementById","ReactDOM"],"mappings":"4UAwBeA,G,6KAlBX,OACE,gCACE,qCACA,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,mB,GAXOC,IAAMC,YCIZC,E,uKAJX,OAAO,8D,GAFUF,IAAMC,W,iCCqDZE,G,wDAlDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,yDAINC,GACT,IAAIC,EAAQD,EAAEE,OAAOC,MAAMC,MAAM,MACjC,GAAIH,EAAM,GAAI,CACV,IAAII,EAASJ,EAAM,GACfK,EAAML,EAAM,GACZM,EAAON,EAAM,GACjBO,KAAKX,MAAMY,OAAOJ,EAAOC,EAAIC,OAE5B,CACD,IAAIF,EAASJ,EAAM,GACfK,EAAML,EAAM,GAChBO,KAAKX,MAAMY,OAAOJ,EAAOC,M,qCAIjB,IAAD,OACPI,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,UAExD,GAAIJ,EACA,OAAOA,EAAkBK,KAAI,SAACC,EAAMC,GAChC,GAAID,EAAKE,KAAM,CACX,IAAIA,EAAOP,KAAKQ,UAAUH,EAAKE,MAC/B,OAAO,2BAAOE,KAAK,OAAOC,QAAS,EAAKvB,aAAcwB,IAAKL,EAAGd,MAAK,mBAAca,EAAKX,OAAnB,mBAAoCW,EAAKV,IAAzC,oBAAwDY,KAG3H,OAAO,2BAAOE,KAAK,OAAOC,QAAS,EAAKvB,aAAcwB,IAAKL,EAAGd,MAAK,mBAAca,EAAKX,OAAnB,mBAAoCW,EAAKV,Y,+BAQxH,OACI,oCACJ,8FACI,4BACI,kBAAC,IAAD,CAAMd,GAAG,KACRgB,KAAKe,sB,GA3CA9B,IAAMC,YC0Nb8B,G,wDAvNb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAQR4B,aATmB,uCASJ,WAAMzB,GAAN,2EAAA0B,EAAA,yDACb1B,EAAE2B,iBACC,EAAK9B,MAAMQ,QAAU,EAAKR,MAAMS,KAAO,EAAKT,MAAMqB,KAAKU,IACpDvB,EAAS,EAAKR,MAAMQ,OACpBC,EAAM,EAAKT,MAAMS,IACrB,EAAKuB,MAAMxB,OAASA,EACpB,EAAKwB,MAAMvB,IAAMA,EACjB,EAAKuB,MAAMX,KAAO,CAACX,KAAMI,KAAKC,MAAM,EAAKf,MAAMqB,KAAKU,MAE9C,EAAK/B,MAAMQ,QAAU,EAAKR,MAAMS,MAClCD,EAAS,EAAKR,MAAMQ,OACpBC,EAAM,EAAKT,MAAMS,IACrB,EAAKuB,MAAMxB,OAASA,EACpB,EAAKwB,MAAMvB,IAAMA,GAGnB,EAAKT,MAAMiC,iBACP,EAAKD,MAAMX,MAA8B,SAAtB,EAAKW,MAAMxB,SAAqB,EAAKwB,MAAMvB,IAjBrD,wBAkBPyB,EAAW,EAAKF,MAAMX,KAAKX,KAlBpB,SAmBYyB,MAAM,EAAKH,MAAMvB,IAAK,CAC3CD,OAAQ,OACR4B,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBpB,KAAMP,KAAKQ,UAAUY,KA7BZ,cAmBLQ,EAnBK,OA+BPC,EAAU,CAAE,eAAgBD,EAASH,QAAQK,IAAI,iBA/B1C,UAgCMF,EAASG,OAhCf,QAgCPnC,EAhCO,OAiCC,EACZ,EAAKV,MAAM8C,QAAQH,EAASjC,EADhB,IAGRG,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEtD,EAAK8B,aAAelC,GAElBmC,EAAkB,CAAExC,OAAQ,OAAQC,IAAK,EAAKuB,MAAMvB,IAAIY,KAAMa,GAC9De,EAAU,EACd,EAAKF,aAAaG,SAAQ,SAAAC,GACrBA,EAAI3C,SAAWwC,EAAgBxC,QAAU2C,EAAI1C,MAAQuC,EAAgBvC,MACtEwC,EAAU,MAGC,IAAZA,IACD,EAAKF,aAAaK,KAAKJ,GACvBhC,aAAaqC,QAAQ,QAAQvC,KAAKQ,UAAU,EAAKyB,gBAjDxC,2BAqDkB,WAAtB,EAAKf,MAAMxB,SAAuB,EAAKwB,MAAMvB,IArDzC,kCAsDU0B,MAAM,EAAKH,MAAMvB,IAAK,CACzCD,OAAQ,SACR4B,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,gBA/DP,eAsDPC,EAtDO,iBAiEMA,EAASG,OAjEf,QAiEPnC,EAjEO,OAkEC,EACZ,EAAKV,MAAM8C,QAAQpC,EADP,IAGFG,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEtD,EAAK8B,aAAelC,GAElBmC,EAAkB,CAAExC,OAAQ,SAAUC,IAAK,EAAKuB,MAAMvB,KACtDwC,EAAU,EACd,EAAKF,aAAaG,SAAQ,SAAAC,GACrBA,EAAI3C,SAAWwC,EAAgBxC,QAAU2C,EAAI1C,MAAQuC,EAAgBvC,MACtEwC,EAAU,MAKC,IAAZA,IACD,EAAKF,aAAaK,KAAKJ,GACvBhC,aAAaqC,QAAQ,QAAQvC,KAAKQ,UAAU,EAAKyB,gBApF9C,4BAwFJ,EAAKf,MAAMX,MAA8B,QAAtB,EAAKW,MAAMxB,SAAoB,EAAKwB,MAAMvB,IAxFzD,wBAyFPyB,EAAW,EAAKF,MAAMX,KAAKX,KAzFpB,UA0FYyB,MAAM,EAAKH,MAAMvB,IAAK,CAC3CD,OAAQ,MACR4B,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBpB,KAAMP,KAAKQ,UAAUY,KApGZ,eA0FLQ,EA1FK,OAsGPC,EAAU,CAAE,eAAgBD,EAASH,QAAQK,IAAI,iBAtG1C,UAuGMF,EAASG,OAvGf,QAuGPnC,EAvGO,OAwGC,EACZ,EAAKV,MAAM8C,QAAQH,EAASjC,EADhB,IAGFG,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEtD,EAAK8B,aAAelC,GAElBmC,EAAkB,CAAExC,OAAQ,MAAOC,IAAK,EAAKuB,MAAMvB,IAAIY,KAAMa,GAC7De,EAAU,EACd,EAAKF,aAAaG,SAAQ,SAAAC,GACrBA,EAAI3C,SAAWwC,EAAgBxC,QAAU2C,EAAI1C,MAAQuC,EAAgBvC,MACtEwC,EAAU,MAGC,IAAZA,IACD,EAAKF,aAAaK,KAAKJ,GACvBhC,aAAaqC,QAAQ,QAAQvC,KAAKQ,UAAU,EAAKyB,gBAxH9C,4BA6HJ,EAAKf,MAAMvB,IA7HP,kCA+HK0B,MAAM,EAAKH,MAAMvB,KA/HtB,eA+HP6C,EA/HO,iBAgIMA,EAAIT,OAhIV,QAgIPnC,EAhIO,OAiIP6C,EAAQ7C,EAAK6C,MACbC,EAAU9C,EAAK8C,QACfb,EAAU,CAAE,eAAgBW,EAAIf,QAAQK,IAAI,iBAChD,EAAK5C,MAAM8C,QAAQH,EAASjC,EAAM6C,EAAOC,IAErC3C,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEtD,EAAK8B,aAAelC,GAElB4C,EAAM,CAAEjD,OAAQ,MAAOC,IAAK,EAAKuB,MAAMvB,KACvCwC,EAAU,EACd,EAAKF,aAAaG,SAAQ,SAAAC,GACrBA,EAAI3C,SAAWiD,EAAIjD,QAAU2C,EAAI1C,MAAQgD,EAAIhD,MAC9CwC,EAAU,MAKC,IAAZA,IACD,EAAKF,aAAaK,KAAKK,GACvBzC,aAAaqC,QAAQ,QAAQvC,KAAKQ,UAAU,EAAKyB,gBArJxC,wBA0JH,EAAKf,MAAMvB,KACnBiD,MAAM,eA3JK,QA6Jb,EAAK1D,MAAMiC,gBA7JE,4CATI,wDAyKnB0B,gBAAkB,SAAAxD,GAChB,IAAMM,EAAMN,EAAEE,OAAOC,MACrB,EAAKsD,SAAS,CAAEnD,SA3KC,EA8KnBoD,mBAAqB,SAAA1D,GACnB,IAAMK,EAASL,EAAEE,OAAOyD,GACxB,EAAKF,SAAS,CAAEpD,YAhLC,EAkLnBuD,WAAa,SAAA5D,GACX,IAAMkB,EAAOlB,EAAEE,OAAOC,MAClBI,EAAOI,KAAKC,MAAMM,GACtB,EAAKuC,SAAS,CAAEvC,KAAM,CAAEX,WArLP,EAuLnBsD,cAAgB,SAACxD,EAAQC,EAAKC,GAC5B,IAAIqB,EAAKjB,KAAKQ,UAAUZ,GACxB,EAAKkD,SAAS,CAAEpD,SAAQC,MAAKY,KAAM,CAAEU,SAvLrC,EAAKC,MAAQ,CACXvB,IAAK,GACLD,OAAQ,IAEV,EAAKuC,aAAe,GANH,E,qDA6LjB,OACE,oCACE,0BAAMkB,SAAUtD,KAAKiB,cACnB,+BACE,uCACA,2BAAOkC,GAAG,MAAMI,KAAK,MAAM3C,KAAK,OAAO4C,SAAUxD,KAAKgD,gBAAiBrD,MAAOK,KAAKX,MAAMS,MACzF,4BAAQc,KAAK,UAAb,QAEF,2BAAO6C,UAAU,WACf,0BAAMA,UAAiC,QAAtBzD,KAAKqB,MAAMxB,OAAmB,SAAW,GAAIsD,GAAG,MAAMtC,QAASb,KAAKkD,oBAArF,OACA,0BAAMO,UAAiC,SAAtBzD,KAAKqB,MAAMxB,OAAoB,SAAW,GAAIsD,GAAG,OAAOtC,QAASb,KAAKkD,oBAAvF,QACA,0BAAMO,UAAiC,QAAtBzD,KAAKqB,MAAMxB,OAAmB,SAAW,GAAIsD,GAAG,MAAMtC,QAASb,KAAKkD,oBAArF,OACA,0BAAMO,UAAiC,WAAtBzD,KAAKqB,MAAMxB,OAAsB,SAAW,GAAIsD,GAAG,SAAStC,QAASb,KAAKkD,oBAA3F,WAER,8BAAUQ,YAAY,OAAOH,KAAK,cAAeC,SAAUxD,KAAKoD,WAAYzD,MAAOK,KAAKX,MAAMqB,QAE1F,uCACA,kBAAC,IAAD,CAAM1B,GAAG,KACT,kBAAC,EAAD,CAASiB,OAAQD,KAAKqD,sB,GAjNXpE,IAAMC,Y,iBCHnByE,G,MAAS,WAA0C,IAAzCC,EAAwC,wDAApBC,EAAoB,uDAAT,KAC3C,OAAOD,EAAYC,EAAW,OAIrBC,EAAa,SAAAzE,GAAK,OAC3BJ,IAAM8E,SAASxD,IAAIlB,EAAMwE,UAAU,SAAAG,GAAK,OACpC/E,IAAMgF,aAAaD,EAAO,CAACJ,UAAWvE,EAAMuE,gBAGvCM,EAAO,SAAA7E,GAAK,OAAIsE,EAAOtE,EAAMuE,UAAWvE,EAAMwE,WAC9CM,EAAO,SAAA9E,GAAK,OAAIsE,GAAQtE,EAAMuE,UAAWvE,EAAMwE,WCqB7ChB,EA7BC,SAACxD,GACb,OACE,oCACA,uCACA,kBAAC,EAAD,CAAYuE,WAAYvE,EAAM+E,SAC5B,kBAACF,EAAD,KACA,iCACE,0CAAgB7E,EAAMuD,OACxB,yBAAKa,UAAU,UACf,kBAAC,IAAD,CAAWF,KAAK,UAAUc,IAAKhF,EAAMN,UAErC,yBAAK0E,UAAU,OACf,kBAAC,IAAD,CAAWF,KAAK,WAAWc,IAAKhF,EAAMiF,cAIxC,kBAACH,EAAD,KACA,yBAAKV,UAAS,kBAAapE,EAAM+E,eCyBxBG,E,kDArCb,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IAKRiC,cAAgB,WACd,EAAK2B,SAAS,CAAEmB,SAAU,EAAK/C,MAAM+C,WAPpB,EAUnBI,WAAa,SAACxC,EAASjC,EAAM6C,EAAOC,GAElC,EAAKI,SAAS,CAAEL,QAAOC,UAASb,UAASsC,SAAU,CAAEvE,WAZpC,EAcnBsD,cAAgB,SAACxD,EAAQC,EAAKC,GAC5B,IAAIqB,EAAKjB,KAAKQ,UAAUZ,GACxB,EAAKkD,SAAS,CAAEpD,SAAQC,MAAKY,KAAM,CAAEU,SAdrC,EAAKC,MAAQ,CACX+C,SAAS,GAHM,E,qDAoBjB,OACE,kBAAC,IAAMK,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,CAAMrD,cAAetB,KAAKsB,cAAea,QAASnC,KAAKwE,WAAY3E,OAAQG,KAAKqB,MAAMxB,OAAQC,IAAKE,KAAKqB,MAAMvB,IAAKY,KAAMV,KAAKqB,MAAMX,OACpI,kBAAC,EAAD,CAAS0D,QAASpE,KAAKqB,MAAM+C,QAASxB,MAAO5C,KAAKqB,MAAMuB,MAAOC,QAAS7C,KAAKqB,MAAMwB,QAASyB,SAAUtE,KAAKqB,MAAMiD,SAAUvF,OAAQiB,KAAKqB,MAAMW,WAEhJ,kBAAC,IAAD,CAAO0C,KAAK,YACV,kBAAC,EAAD,CAASzE,OAAQD,KAAKqD,iBAGxB,kBAAC,EAAD,W,GAhCUpE,IAAMC,WCHlB0F,E,uKAEE,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,W,GAJG3F,IAAMC,WAUnB2F,EAAcC,SAASC,eAAe,QAC5CC,IAASrB,OAAO,kBAAC,EAAD,MAAUkB,K","file":"static/js/main.34b08a83.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to='/'>Home</Link>\n            </li>\n            <li>\n              <NavLink to=\"/history\">History</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy; 2018 Code Fellows</footer>;\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './history.scss';\n\nclass History extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handlerClick = this.handlerClick.bind(this);\n    }\n    handlerClick(e) {\n        let array = e.target.value.split('  ');\n        if (array[5]) {\n            let method = array[1];\n            let url = array[3];\n            let data = array[5];\n            this.props.handel(method,url,data);\n        }\n        else {\n            let method = array[1];\n            let url = array[3];\n            this.props.handel(method,url); \n        }\n    }\n\n    getDataLocal() {\n        let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n       \n        if (queryLocalStorage) {\n            return queryLocalStorage.map((item, i) => {\n                if (item.body) {\n                    let body = JSON.stringify(item.body);\n                    return <input type='text' onClick={this.handlerClick} key={i} value={`method:  ${item.method}  url:  ${item.url}  body:  ${body}`} />\n                }\n                else {\n                    return <input type='text' onClick={this.handlerClick} key={i} value={`method:  ${item.method}  url:  ${item.url}`} />\n                }\n            });\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n        <p>press on history it will return you to home page then press Go!</p>\n            <ul>\n                <Link to='/'>\n                {this.getDataLocal()}\n                </Link>\n                \n            </ul>\n            </>\n        )\n    }\n}\nexport default History;","import React from 'react';\nimport History from '../history/history';\nimport {Link} from 'react-router-dom';\nimport './form.scss';\n\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: '',\n    };\n    this.requestQuery = [];\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    if(this.props.method && this.props.url && this.props.body.me){\n      let method = this.props.method;\n      let url = this.props.url;\n      this.state.method = method;\n      this.state.url = url;\n      this.state.body = {data: JSON.parse(this.props.body.me)};\n    }\n    else if(this.props.method && this.props.url){\n      let method = this.props.method;\n      let url = this.props.url;\n      this.state.method = method;\n      this.state.url = url;\n    }\n\n    this.props.toggleLoading();\n    if (this.state.body && this.state.method === 'post' && this.state.url) {\n      let dataBody = this.state.body.data;\n      const response = await fetch(this.state.url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(dataBody),\n      });\n      let Headers = { 'Content-Type': response.headers.get('Content-Type') };\n      let data = await response.json();\n      let count = 1;\n      this.props.handler(Headers, data, count);\n      //save in local storage //\n      let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n      if(queryLocalStorage){\n        this.requestQuery = queryLocalStorage;\n      }\n      let objLocalStorage = { method: 'post', url: this.state.url,body: dataBody}\n      let counter = 0;\n      this.requestQuery.forEach(val =>{\n        if(val.method === objLocalStorage.method && val.url === objLocalStorage.url){\n          counter = 1;\n        }\n      });\n      if(counter === 0){\n        this.requestQuery.push(objLocalStorage);\n        localStorage.setItem('query',JSON.stringify(this.requestQuery));\n    }\n    ///\n    }\n    else if (this.state.method === 'delete' && this.state.url) {\n      let response = await fetch(this.state.url, {\n        method: 'DELETE',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      });\n      let data = await response.json();\n      let count = 0;\n      this.props.handler(data, count);\n            // save in local storage\n            let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n            if(queryLocalStorage){\n              this.requestQuery = queryLocalStorage;\n            }\n            let objLocalStorage = { method: 'delete', url: this.state.url }\n            let counter = 0;\n            this.requestQuery.forEach(val =>{\n              if(val.method === objLocalStorage.method && val.url === objLocalStorage.url){\n                counter = 1;\n              }\n              \n            });\n      \n            if(counter === 0){\n              this.requestQuery.push(objLocalStorage);\n              localStorage.setItem('query',JSON.stringify(this.requestQuery));\n          }\n          /////\n    }\n    else if (this.state.body && this.state.method === 'put' && this.state.url) {\n      let dataBody = this.state.body.data;\n      const response = await fetch(this.state.url, {\n        method: 'PUT',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(dataBody),\n      });\n      let Headers = { 'Content-Type': response.headers.get('Content-Type') };\n      let data = await response.json();\n      let count = 1;\n      this.props.handler(Headers, data, count);\n            //save in local storage //\n            let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n            if(queryLocalStorage){\n              this.requestQuery = queryLocalStorage;\n            }\n            let objLocalStorage = { method: 'put', url: this.state.url,body: dataBody}\n            let counter = 0;\n            this.requestQuery.forEach(val =>{\n              if(val.method === objLocalStorage.method && val.url === objLocalStorage.url){\n                counter = 1;\n              }\n            });\n            if(counter === 0){\n              this.requestQuery.push(objLocalStorage);\n              localStorage.setItem('query',JSON.stringify(this.requestQuery));\n          }\n          ///\n\n    }\n    else if (this.state.url) {\n\n      let raw = await fetch(this.state.url);\n      let data = await raw.json();\n      let count = data.count;\n      let results = data.results;\n      let Headers = { 'Content-Type': raw.headers.get('Content-Type') };\n      this.props.handler(Headers, data, count, results);\n      // save in local storage\n      let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n      if(queryLocalStorage){\n        this.requestQuery = queryLocalStorage;\n      }\n      let obj = { method: 'get', url: this.state.url }\n      let counter = 0;\n      this.requestQuery.forEach(val =>{\n        if(val.method === obj.method && val.url === obj.url){\n          counter = 1;\n        }\n        \n      });\n\n      if(counter === 0){\n        this.requestQuery.push(obj);\n        localStorage.setItem('query',JSON.stringify(this.requestQuery));\n    }\n    /////\n    }\n\n    else if (!this.state.url) {\n      alert('missing url');\n    }\n    this.props.toggleLoading();\n  }\n\n  handleChangeURL = e => {\n    const url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleChangeMethod = e => {\n    const method = e.target.id;\n    this.setState({ method });\n  };\n  handelBody = e => {\n    const body = e.target.value;\n    let data = JSON.parse(body);\n    this.setState({ body: { data } });\n  };\n  handelHistory = (method, url, data) => {\n    let me = JSON.stringify(data);\n    this.setState({ method, url, body: { me } });\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label >\n            <span>URL: </span>\n            <input id='url' name='url' type='text' onChange={this.handleChangeURL} value={this.props.url}/>\n            <button type=\"submit\">GO!</button>\n          </label>\n          <label className=\"methods\">\n            <span className={this.state.method === 'get' ? 'active' : ''} id=\"get\" onClick={this.handleChangeMethod}>GET</span>\n            <span className={this.state.method === 'post' ? 'active' : ''} id=\"post\" onClick={this.handleChangeMethod}>POST</span>\n            <span className={this.state.method === 'put' ? 'active' : ''} id=\"put\" onClick={this.handleChangeMethod}>PUT</span>\n            <span className={this.state.method === 'delete' ? 'active' : ''} id=\"delete\" onClick={this.handleChangeMethod}>DELETE</span>\n          </label>\n    <textarea placeholder=\"Body\" name=\"requestBody\"  onChange={this.handelBody} value={this.props.body}></textarea>\n        </form>\n        <h2>History</h2>\n        <Link to='/'>\n        <History handel={this.handelHistory}/>\n        </Link>\n        \n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst render = (condition = false , children = null) => {\n    return condition ? children : null;\n};\n\n\nexport const IfRenderer = props => \n    React.Children.map(props.children, child =>\n        React.cloneElement(child, {condition: props.condition})\n    ); \n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);","import React from 'react';\nimport ReactView from 'react-json-view'; \nimport './results.scss';\nimport { IfRenderer, Then, Else } from '../if/if';\n\nconst results = (props) => {\n    return (\n      <>\n      <h2>Results</h2>\n      <IfRenderer condition={!props.loading} >\n        <Then>\n        <section>\n          <span>\"count\": {props.count}</span>\n        <div className=\"method\">\n        <ReactView name='Headers' src={props.Header}/>\n      </div>\n        <div className=\"url\">\n        <ReactView name='Response' src={props.Response}/>\n      </div>\n      </section>\n      </Then>\n      <Else>\n      <div className={`loading-${props.loading}`}>\n      \n      </div>\n      </Else>\n      </IfRenderer>\n      \n      \n       \n      </>\n    )\n}\n\nexport default results;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './app.scss';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results';\nimport History from './components/history/history';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n    }\n  }\n  toggleLoading = () => {\n    this.setState({ loading: !this.state.loading });\n  }\n\n  handelForm = (Headers, data, count, results) => {\n\n    this.setState({ count, results, Headers, Response: { data } });\n  }\n  handelHistory = (method, url, data) => {\n    let me = JSON.stringify(data);\n    this.setState({ method, url, body: { me } });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Route path=\"/\" exact>\n          <Form toggleLoading={this.toggleLoading} handler={this.handelForm} method={this.state.method} url={this.state.url} body={this.state.body} />\n          <Results loading={this.state.loading} count={this.state.count} results={this.state.results} Response={this.state.Response} Header={this.state.Headers} />\n        </Route>\n        <Route path=\"/history\">\n          <History handel={this.handelHistory}/>\n        </Route>\n\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app';\n\nclass Main extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n\n"],"sourceRoot":""}