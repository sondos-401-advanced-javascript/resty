{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/form.js","components/if/if.js","components/results/results.js","components/history/history.js","app.js","index.js"],"names":["Header","to","React","Component","Footer","Form","props","handleSubmit","e","a","preventDefault","method","url","body","me","state","data","JSON","parse","toggleLoading","dataBody","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","stringify","response","Headers","get","json","handler","queryLocalStorage","localStorage","getItem","requestQuery","objLocalStorage","counter","forEach","val","push","setItem","raw","count","results","obj","alert","handleChangeURL","target","value","setState","handleChangeMethod","id","handelBody","handelHistory","onSubmit","this","name","type","onChange","className","onClick","placeholder","render","condition","children","IfRenderer","Children","map","child","cloneElement","Then","Else","loading","src","Response","History","handlerClick","bind","array","split","handel","item","i","key","getDataLocal","App","handelForm","Fragment","path","exact","Main","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.9708abf3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to='/'>Home</Link>\n            </li>\n            <li>\n              <NavLink to=\"/history\">History</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy; 2018 Code Fellows</footer>;\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport './form.scss';\n\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: '',\n    };\n    this.requestQuery = [];\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    if(this.props.method && this.props.url && this.props.body.me){\n      let method = this.props.method;\n      let url = this.props.url;\n      this.state.method = method;\n      this.state.url = url;\n      this.state.body = {data: JSON.parse(this.props.body.me)};\n    }\n    else if(this.props.method && this.props.url){\n      let method = this.props.method;\n      let url = this.props.url;\n      this.state.method = method;\n      this.state.url = url;\n    }\n\n    this.props.toggleLoading();\n    if (this.state.body && this.state.method === 'post' && this.state.url) {\n      let dataBody = this.state.body.data;\n      const response = await fetch(this.state.url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(dataBody),\n      });\n      let Headers = { 'Content-Type': response.headers.get('Content-Type') };\n      let data = await response.json();\n      let count = 1;\n      this.props.handler(Headers, data, count);\n      //save in local storage //\n      let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n      if(queryLocalStorage){\n        this.requestQuery = queryLocalStorage;\n      }\n      let objLocalStorage = { method: 'post', url: this.state.url,body: dataBody}\n      let counter = 0;\n      this.requestQuery.forEach(val =>{\n        if(val.method === objLocalStorage.method && val.url === objLocalStorage.url){\n          counter = 1;\n        }\n      });\n      if(counter === 0){\n        this.requestQuery.push(objLocalStorage);\n        localStorage.setItem('query',JSON.stringify(this.requestQuery));\n    }\n    ///\n    }\n    else if (this.state.method === 'delete' && this.state.url) {\n      let response = await fetch(this.state.url, {\n        method: 'DELETE',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      });\n      let data = await response.json();\n      let count = 0;\n      this.props.handler(data, count);\n            // save in local storage\n            let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n            if(queryLocalStorage){\n              this.requestQuery = queryLocalStorage;\n            }\n            let objLocalStorage = { method: 'delete', url: this.state.url }\n            let counter = 0;\n            this.requestQuery.forEach(val =>{\n              if(val.method === objLocalStorage.method && val.url === objLocalStorage.url){\n                counter = 1;\n              }\n              \n            });\n      \n            if(counter === 0){\n              this.requestQuery.push(objLocalStorage);\n              localStorage.setItem('query',JSON.stringify(this.requestQuery));\n          }\n          /////\n    }\n    else if (this.state.body && this.state.method === 'put' && this.state.url) {\n      let dataBody = this.state.body.data;\n      const response = await fetch(this.state.url, {\n        method: 'PUT',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(dataBody),\n      });\n      let Headers = { 'Content-Type': response.headers.get('Content-Type') };\n      let data = await response.json();\n      let count = 1;\n      this.props.handler(Headers, data, count);\n            //save in local storage //\n            let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n            if(queryLocalStorage){\n              this.requestQuery = queryLocalStorage;\n            }\n            let objLocalStorage = { method: 'put', url: this.state.url,body: dataBody}\n            let counter = 0;\n            this.requestQuery.forEach(val =>{\n              if(val.method === objLocalStorage.method && val.url === objLocalStorage.url){\n                counter = 1;\n              }\n            });\n            if(counter === 0){\n              this.requestQuery.push(objLocalStorage);\n              localStorage.setItem('query',JSON.stringify(this.requestQuery));\n          }\n          ///\n\n    }\n    else if (this.state.url) {\n\n      let raw = await fetch(this.state.url);\n      let data = await raw.json();\n      let count = data.count;\n      let results = data.results;\n      let Headers = { 'Content-Type': raw.headers.get('Content-Type') };\n      this.props.handler(Headers, data, count, results);\n      // save in local storage\n      let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n      if(queryLocalStorage){\n        this.requestQuery = queryLocalStorage;\n      }\n      let obj = { method: 'get', url: this.state.url }\n      let counter = 0;\n      this.requestQuery.forEach(val =>{\n        if(val.method === obj.method && val.url === obj.url){\n          counter = 1;\n        }\n        \n      });\n\n      if(counter === 0){\n        this.requestQuery.push(obj);\n        localStorage.setItem('query',JSON.stringify(this.requestQuery));\n    }\n    /////\n   \n    }\n\n    else if (!this.state.url) {\n      alert('missing url');\n    }\n    this.props.toggleLoading();\n  }\n\n  handleChangeURL = e => {\n    const url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleChangeMethod = e => {\n    const method = e.target.id;\n    this.setState({ method });\n  };\n  handelBody = e => {\n    const body = e.target.value;\n    let data = JSON.parse(body);\n    this.setState({ body: { data } });\n  };\n  handelHistory = (method, url, data) => {\n    let me = JSON.stringify(data);\n    this.setState({ method, url, body: { me } });\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label >\n            <span>URL: </span>\n            <input id='url' name='url' type='text' onChange={this.handleChangeURL}/>\n            <button type=\"submit\">GO!</button>\n          </label>\n          <label className=\"methods\">\n            <span className={this.state.method === 'get' ? 'active' : ''} id=\"get\" onClick={this.handleChangeMethod}>GET</span>\n            <span className={this.state.method === 'post' ? 'active' : ''} id=\"post\" onClick={this.handleChangeMethod}>POST</span>\n            <span className={this.state.method === 'put' ? 'active' : ''} id=\"put\" onClick={this.handleChangeMethod}>PUT</span>\n            <span className={this.state.method === 'delete' ? 'active' : ''} id=\"delete\" onClick={this.handleChangeMethod}>DELETE</span>\n          </label>\n    <textarea placeholder=\"Body\" name=\"requestBody\"  onChange={this.handelBody}></textarea>\n        </form>\n       \n        \n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst render = (condition = false , children = null) => {\n    return condition ? children : null;\n};\n\n\nexport const IfRenderer = props => \n    React.Children.map(props.children, child =>\n        React.cloneElement(child, {condition: props.condition})\n    ); \n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);","import React from 'react';\nimport ReactView from 'react-json-view'; \nimport './results.scss';\nimport { IfRenderer, Then, Else } from '../if/if';\n\nconst results = (props) => {\n    return (\n      <>\n      <h2>Results</h2>\n      <IfRenderer condition={!props.loading} >\n        <Then>\n        <section>\n          <span>\"count\": {props.count}</span>\n        <div className=\"method\">\n        <ReactView name='Headers' src={props.Header}/>\n      </div>\n        <div className=\"url\">\n        <ReactView name='Response' src={props.Response}/>\n      </div>\n      </section>\n      </Then>\n      <Else>\n      <div className={`loading-${props.loading}`}>\n      \n      </div>\n      </Else>\n      </IfRenderer>\n      \n      \n       \n      </>\n    )\n}\n\nexport default results;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './history.scss';\n\nclass History extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handlerClick = this.handlerClick.bind(this);\n    }\n    handlerClick(e) {\n        let array = e.target.value.split('  ');\n        if (array[5]) {\n            let method = array[1];\n            let url = array[3];\n            let data = array[5];\n            this.props.handel(method,url,data);\n        }\n        else {\n            let method = array[1];\n            let url = array[3];\n            this.props.handel(method,url); \n        }\n    }\n\n    getDataLocal() {\n        let queryLocalStorage = JSON.parse(localStorage.getItem('query'));\n       \n        if (queryLocalStorage) {\n            return queryLocalStorage.map((item, i) => {\n                if (item.body) {\n                    let body = JSON.stringify(item.body);\n                    return <input type='text'  onClick={this.handlerClick} key={i} value={`method:  ${item.method}  url:  ${item.url}  body:  ${body}`} />\n                }\n                else {\n                    return <input type='text'  onClick={this.handlerClick} key={i} value={`method:  ${item.method}  url:  ${item.url}`} />\n                }\n            });\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n        <p>press on history it will return you to home page then press Go!</p>\n            <ul>\n                <Link to='/'>\n                {this.getDataLocal()}\n                </Link>\n                \n            </ul>\n            </>\n        )\n    }\n}\nexport default History;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './app.scss';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results';\nimport History from './components/history/history';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n    }\n  }\n  toggleLoading = () => {\n    this.setState({ loading: !this.state.loading });\n  }\n\n  handelForm = (Headers, data, count, results) => {\n\n    this.setState({ count, results, Headers, Response: { data } });\n  }\n  handelHistory = (method, url, data) => {\n    let me = JSON.stringify(data);\n    this.setState({ method, url, body: { me } });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Route path=\"/\" exact>\n          <Form toggleLoading={this.toggleLoading} handler={this.handelForm} method={this.state.method} url={this.state.url} body={this.state.body} />\n          <Results loading={this.state.loading} count={this.state.count} results={this.state.results} Response={this.state.Response} Header={this.state.Headers} />\n        </Route>\n        <Route path=\"/history\">\n          <History handel={this.handelHistory}/>\n        </Route>\n\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app';\n\nclass Main extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n\n"],"sourceRoot":""}